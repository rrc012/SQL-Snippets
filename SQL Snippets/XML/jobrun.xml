<?xml version="1.0" encoding="utf-16"?>
<AutoReplacement xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Token>jobrun</Token>
  <Name />
  <CaseSensitive>false</CaseSensitive>
  <SelectReplacement>false</SelectReplacement>
  <Replacement>USE msdb
GO

SET NOCOUNT ON;

DECLARE @iJEH          TINYINT = 1, --Indicates number of runs for a job based on the date
        @iStepID       TINYINT, --If NULL, retrieves all the steps for a given job
        @iRunStatus    TINYINT, --If NULL, retrieves all the statuses for a given job
        @iCharPosition TINYINT,
        @dtJEHDate     DATE,
        @sJobsNameList VARCHAR(1000) = '|'; --Enter a comma-separated list of job names        

--Used to hold list of SQL Agent Job names to process
IF OBJECT_ID('tempdb..#JobsNameList') IS NOT NULL DROP TABLE tempdb..#JobsNameList;
CREATE TABLE #JobsNameList 
(
 job_name VARCHAR(128),
 run_date DATE
);

--Process list
SET @sJobsNameList = @sJobsNameList + ',';

WHILE CHARINDEX(',', @sJobsNameList) &gt; 0
BEGIN
	SET @iCharPosition = CHARINDEX(',', @sJobsNameList)
	INSERT INTO #JobsNameList (job_name)
	SELECT LTRIM(RTRIM(LEFT(@sJobsNameList, @iCharPosition - 1)));
	SET @sJobsNameList = STUFF(@sJobsNameList, 1, @iCharPosition, '');
END  -- While loop

;WITH JEH
AS
(
SELECT j.name AS job_name,
       ROW_NUMBER() OVER(PARTITION BY j.name ORDER BY j.name, CA.run_date DESC) AS [nRun(s)],
       CA.run_date
  FROM dbo.sysjobhistory AS h
       INNER JOIN dbo.sysjobs AS j ON h.job_id = j.job_id
       INNER JOIN #JobsNameList AS jnl ON j.name = jnl.job_name
       CROSS APPLY (SELECT CAST(CONVERT(VARCHAR(10), h.run_date, 101) AS DATE) AS run_date) CA
 GROUP BY j.name, CA.run_date
),
LastRun
AS
(
SELECT JEH.job_name, MIN(JEH.run_date) AS Earliest_Run_Date
  FROM JEH
 WHERE [nRun(s)] = IIF(@iJEH &gt; [nRun(s)], [nRun(s)], @iJEH)
 GROUP BY JEH.job_name
)
UPDATE JNL
   SET run_date = Earliest_Run_Date
  FROM LastRun AS LR
       INNER JOIN #JobsNameList AS JNL ON LR.job_name = JNL.job_name

--SELECT * FROM #JobsNameList;

SELECT j.name AS JobName,
       --j.description AS JobDescription,
       h.step_id AS StepID,
       h.step_name AS StepName,
       js.subsystem,
       SD.StartDate,
       STUFF(STUFF(RIGHT('000000' + CAST (h.run_time AS VARCHAR(6)),6),5,0,':'),3,0,':') StartTime,
       TRY_CONVERT(TIME(0), STR(FLOOR(h.run_duration / 10000), 2, 0)
                          + ':' + RIGHT(STR(FLOOR(h.run_duration / 100), 6, 0), 2)
                          + ':' + RIGHT(STR(h.run_duration), 2)) AS [ExecutionTime (HH:MM:SS)],
       CASE h.run_status
            WHEN 0 THEN 'Failed'
            WHEN 1 THEN 'Succeeded'
            WHEN 2 THEN 'Retry'
            WHEN 3 THEN 'Cancelled'
            WHEN 4 THEN 'In Progress'
       END AS ExecutionStatus,
       js.command,
       js.database_name,
       js.output_file_name,
       h.message MessageGenerated
  FROM dbo.sysjobhistory AS h
       INNER JOIN dbo.sysjobs AS j ON h.job_id = j.job_id
       INNER JOIN dbo.sysjobsteps AS js ON j.job_id = js.job_id
              AND h.step_id = js.step_id
       INNER JOIN #JobsNameList AS jnl ON j.name = jnl.job_name
	  CROSS APPLY (SELECT TRY_CAST(STR(h.run_date,8, 0) AS DATE) AS StartDate) AS SD
 WHERE 1 = 1
   AND h.step_id = COALESCE(@iStepID, h.step_id)
   AND h.run_status = COALESCE(@iRunStatus, h.run_status)
   AND SD.StartDate &gt;= jnl.run_date
 ORDER BY JobName, SD.StartDate DESC, StartTime DESC, StepID;</Replacement>
  <CursorPositionMarker>|</CursorPositionMarker>
</AutoReplacement>